@model TouristAgency.ViewModels.Hotel.IndexHotelViewModel

@{
    ViewData["Title"] = "Index";
    var defaultHotel = Model.Hotels.FirstOrDefault();
}

<h1>Index</h1>

<p>
    @if (User.IsInRole(TouristAgency.Areas.Identity.Roles.Admin))
    {
        <a asp-action="Create">CREATE NEW</a>
    }
</p>
<form method="get" class="form-inline">
    <label>Name:</label>
    <input name="selectedName" value="@Model.FilterHotelViewModel.SelectedName" class="form-control col-2 m-1" />

    <input type="hidden" name="isFromFilter" value="true" />
    <input type="submit" value="Filter" class="btn btn-outline-dark col-3 m-1" />
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortState="@Model.SortHotelViewModel.NameSort"
                   asp-route-selectedName="@Model.FilterHotelViewModel.SelectedName">
                    @Html.DisplayNameFor(model => defaultHotel.Name)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.Country)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.Town)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.Stars)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.ContactPerson)
            </th>
            <th>
                @Html.DisplayNameFor(model => defaultHotel.HotelPhotoLink)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Hotels)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Town)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Stars)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactPerson)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HotelPhotoLink)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (User.IsInRole(TouristAgency.Areas.Identity.Roles.Admin))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex align-items-center justify-content-center">

    @if (Model.PageViewModel.HasPreviousPage)
    {
        <a asp-action="Index"
           asp-route-page="1"
           asp-route-sortState="@Model.SortHotelViewModel.Current"
           asp-route-selectedName="@Model.FilterHotelViewModel.SelectedName"
           class="btn btn-outline-dark m-1">
            First page
        </a>

        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
           asp-route-sortState="@Model.SortHotelViewModel.Current"
           asp-route-selectedName="@Model.FilterHotelViewModel.SelectedName"
           class="btn btn-outline-dark m-1">
            Previous page
        </a>
    }
    <a class="btn btn-outline-dark m-1">
        @Model.PageViewModel.PageNumber
    </a>
    @if (Model.PageViewModel.HasNextPage)
    {
        <a asp-action="Index"
           asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
           asp-route-sortState="@Model.SortHotelViewModel.Current"
           asp-route-selectedName="@Model.FilterHotelViewModel.SelectedName"
           class="btn btn-outline-dark m-1">
            Next page
        </a>

        <a asp-action="Index"
           asp-route-page="@Model.PageViewModel.TotalPages"
           asp-route-sortState="@Model.SortHotelViewModel.Current"
           asp-route-selectedName="@Model.FilterHotelViewModel.SelectedName"
           class="btn btn-outline-dark m-1">
            Last page (@Model.PageViewModel.TotalPages)
        </a>
    }
</div>